이전 전화번호부 4버전에는 구조체를 사용을 했었다.

	typedef struct person {
		char *name;
		char *number;
		char *email;
		char *group;
	} Person;

Person directory[CAPACITY];
int n = 0;


하지만 일반적으로 C 언어에서 구조체의 배열을 만들어서 데이터를 관리하는건 맞지않습니다.
왜?
	- 값에의한참조 때문에 발생합니다.

+ C 언어에서 함수를 호출하고 매개변수를 지정하면, 함수는 매개변수로 전달받은 값을 지역변수에 복사해서 실행을 합니다.

	void function(int input);
	int number = 1;
	function(number);

	void function(int input){
		printf("%d", input);
	}

function 함수에 매개변수로 number 값을 바로 전달해버리면 
아래 정의된 함수로 가서 처리하기위해 number의 값을 함수지역변수 input으로 복사해서 실행한다는 개념인것이죠.
C 언어에서 값을 함수매개변수로 전달했을 때, 일어나는 일은 이정도로 설명할 수 있구요.
만약 이 전달되는 매개변수가 단순히 32비트int 정수가 아니라 엄청나게 거대한 구조체 덩어리라고 생각을 해본다면요?

예를들어,
	- Person 타입의 구조체를 정의하고 어떤 함수 function(Person P) 형태로 매개변수 값을 요구한다고한다면?
	- 또 우리가 function을 한 30번만 반복한다고하면?

functon을 호출할 때마다 저 거대하고 무거운 Person 구조체를 복사해서 사용해야하니 부담이 될겁니다.



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


전화번호부 v5 에서는?
	- 구조체의 배열을 사용하지않고, 구조체들의 포인터 배열을 사용할겁니다.
		(배열 디렉토리의 타입이 전에는 그냥 Person 타입이었습니다.)

자료구조
	- 구조체 Person의 주소를 저장하는 배열 directory 하나와 자료구조에 새로운 Person을 추가할 때마다 
		메모리 어딘가에 새로운 Person 크기만큼의 공간을 할당받아서 데이터를 저장하고
		할당받은 공간의 주소를 directory 배열에 추가하는 식으로 만들겁니다.

