	/*
* 문자열

	문자열은 char타입의 배열의 각 칸마다 문자 하나씩 저장됨.

	char str[6];
	str[0] = 'h';
	str[1] = 'e';
	str[2] = 'l';
	str[3] = 'l';
	str[4] = 'o';
	str[5] = '\0';  null character는 문자열의 끝을 표시하는 역할을 한다.
					즉 배열의 크기가 문자열의 길이보다 적어도 1만큼 길어야 한다!!
					사실 null character의 c언어 고유의 문법은 아닐겁니다?

	C 언어는 문자열을 생성하는 편리한 방법을 제공
	char str[] = "hello";

	혹은

	char *str = "hello";	하지만 이렇게 정의된 분자열은 수정이 불가능하다는 점에서
							위의 두방법과 다르다. 이것을 string literal이라고 부른다.



	위의 두 방법은 완벽하게 같은 동작을 하나 차라리 포인터 변수에 문자열을 집어넣은 경우에는 다시 한번 수정이 불가능 하다고 기억하자!



* string.h 라이브러리 함수
	
	string.h 라이브러리는 문자열을 다루는 다양한 함수를 제공.

	strcpy 복사
	strlen 길이
	strcat 합치기
	strcmp 비교



* 문자열들의 저장

	- 여러개의 단어들을 포인터를 이용하여 아래 그림과 같이 저장해보자.
	- 그림 설명		words 라는 크기가 7인 배열 한칸마다 길이를 알수없는 임의의단어를 저장해보자.
					하나의 배열이 있고 배열의 각 칸에 하나의 단어가 저장이 되는데 그 단어가 문자 배열인 자료구조를 생각할수있습니다.
					(example04-1.cpp)



* 파일로도 문자열을 받을 수 있습니다.
	(example04-2.cpp)
* 파일에 접근해서 문자열을 쓸 수 도 있습니다.
	(example04-3.cpp)
	*/